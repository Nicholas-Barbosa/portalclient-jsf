<ui:composition xmlns="http://www.w3.org/1999/xhtml"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:p="http://primefaces.org/ui" template="../WEB-INF/template.xhtml">

	<ui:define name="head">
		<h:outputStylesheet name="css/flags/flags.css" library="demo" />


	</ui:define>

	<ui:define name="title">#{holdMessageView.getLabel('orcamento_message')}</ui:define>

	<ui:define name="viewname">
		<li>#{holdMessageView.getLabel('compras_message')}</li>
		<li><i class="pi pi-chevron-right"></i></li>
		<li><p:link outcome="/faces/budget">#{holdMessageView.getLabel('orcamento_message')}</p:link>
		</li>
	</ui:define>

	<ui:define name="content">



		<p:growl id="growl" showDetail="true" globalOnly="true" />

		<div class="card">
			<h:form>
				<p:toolbar id="tb">
					<f:facet name="left">
						<p:commandButton type="button" title="Print" icon="pi pi-print"
							styleClass="ui-button-warning p-mr-2"
							onclick="PF('downloadDialog').show()"
							disabled="#{budgetController.budgetEstimateDTO eq null}" />
						<p:commandButton title="Restore2" icon="pi pi-times"
							styleClass="ui-button-danger"
							action="#{budgetController.clearBudgetForm}"
							update="customerDTO formProdutos formDtSelectedItems formItems budgetEstimateForm">
							<p:confirm type="popup"
								header="#{holdMessageView.label('confirmacao')}"
								message="#{holdMessageView.label('restaurar_budget_form')}"
								icon="pi pi-info-circle" />
						</p:commandButton>


					</f:facet>

				</p:toolbar>
				<p:sticky target="tb" />
			</h:form>
		</div>

		<div class="p-grid">
			<div class="p-col-12">
				<div class="card">

					<p:button icon="pi pi-search"
						styleClass="rounded-button ui-button-success p-mr-2 p-mb-2"
						onclick="PF('dlgSearchCustomer').show()" />
					<h:form id="customerDTO">
						<div class="ui-fluid p-formgrid p-grid">
							<div class="p-field p-col-12 p-xl-4 p-lg-5 p-md-12">
								<p:outputLabel value="#{holdMessageView.label('cliente')}" />
								<p:inputText
									value="#{budgetController.selectedCustomer.name}-#{budgetController.selectedCustomer.store}"
									readonly="true" />
							</div>
							<div class="p-field p-col-12 p-xl-3 p-lg-2  p-md-12">
								<p:outputLabel value="CGC" for="cgc" />
								<p:inputText value="#{budgetController.selectedCustomer.cgc}"
									readonly="true" id="cgc" />
							</div>
							<div class="p-field p-col-12 p-xl-5 p-lg-5 p-md-12">
								<p:outputLabel for="endereco"
									value="#{holdMessageView.label('endereco')}" />
								<p:inputText id="endereco"
									value="#{budgetController.selectedCustomer.address}, #{budgetController.selectedCustomer.city}- #{budgetController.selectedCustomer.state}"
									readonly="true" />
							</div>

						</div>

					</h:form>
				</div>
			</div>

			<div class="p-col-12" id="selectProducts">
				<div class="card">
					<h5>#{holdMessageView.label('selecione_produtos')}</h5>
					<div class="p-grid">
						<div class="p-col-5 p-d-flex p-ai-center p-jc-center">
							<div class="ui-fluid">
								<h:form id="formProdutos">
									<p:remoteCommand update="formProdutos:dtProducts"
										process="@none" name="updateDtProducts" />
									<p:dataTable value="#{budgetController.lazyProducts}"
										var="product" paginator="true"
										rows="#{budgetController.pageSizeForProducts}" id="dtProducts"
										lazy="true"
										paginatorTemplate="{RowsPerPageDropdown} {FirstPageLink} {PreviousPageLink} {CurrentPageReport} {NextPageLink} {LastPageLink}"
										paginatorAlwaysVisible="false"
										rowKey="#{product.commercialCode}" stripedRows="true"
										size="small" reflow="true" styleClass="ui-datatable-sm"
										paginatorPosition="bottom"
										style="max-height:40vh; overflow-y: auto">
										<p:ajax event="page"
											listener="#{budgetController.onPageProducts}" process="@this"
											update="growl" onstart="detectLongProcess()"
											oncomplete="onCompletePageProducts()" />

										<p:column
											headerText="#{holdMessageView.label('codigo_comercial')}">
											<h:outputText value="#{product.commercialCode}" />
										</p:column>
										<p:column headerText="#{holdMessageView.label('codigo')}">
											<h:outputText value="#{product.code}" />
										</p:column>

										<p:column headerText="#{holdMessageView.label('descricao')}">
											<h:outputText value="#{product.description}" />
										</p:column>
										<p:column style="width:3rem;text-align: center">
											<p:commandButton icon="pi pi-check"
												styleClass="rounded-button p-mr-2 p-mb-2"
												action="#{budgetController.onProductSelected(product)}"
												update="formDtSelectedItems " />
										</p:column>
									</p:dataTable>

								</h:form>

							</div>
						</div>

						<div class="p-col-1">
							<p:divider layout="vertical">
								<b>SELECTED</b>
							</p:divider>
						</div>
						<div class="p-col-5 p-ai-center p-jc-center">
							<h:form id="formDtSelectedItems">
								<p:dataTable value="#{budgetController.selectItems}" var="item"
									id="dtSelectedItems" rowKey="#{item.commercialCode}"
									stripedRows="true" size="small" reflow="true"
									styleClass="ui-datatable-sm" paginator="true" rows="10"
									paginatorTemplate="{RowsPerPageDropdown} {FirstPageLink} {PreviousPageLink} {CurrentPageReport} {NextPageLink} {LastPageLink}"
									paginatorAlwaysVisible="false"
									style="max-height:40vh; overflow-y: auto">
									<f:facet name="header">
										<p:commandButton value="#{holdMessageView.label('estimar')}"
											styleClass="rounded-button ui-button-help p-mr-2 p-mb-2"
											icon="pi pi-dollar"
											disabled="#{budgetController.selectItems.size() == 0}"
											id="btnEstimar" onstart="PF('globalLoadDlg').show()"
											oncomplete="onCompleteEstimate()"
											action="#{budgetController.generateQuote}" process="@this"
											update="budgetEstimateForm formItems formDtSelectedItems:dtSelectedItems" />

									</f:facet>
									<p:column headerText="#{holdMessageView.label('descricao')}">
										<h:outputText value="#{item.description}" />
									</p:column>
									<!-- 	<p:column headerText="#{holdMessageView.label('quantidade')}">
										<p:cellEditor>
											<f:facet name="output">
												<h:outputText value="#{item.quantity}" />
											</f:facet>
											<f:facet name="input">
												<p:inputText id="modelInput2" value="#{item.quantity}"
													style="width:100%" />
											</f:facet>
										</p:cellEditor>

									</p:column> -->
									<p:column>
										<p:commandButton icon="pi pi-times"
											styleClass="rounded-button ui-button-danger p-mr-2 p-mb-2"
											process="@this"
											action="#{budgetController.removeSelectedItem(item)}"
											update="formDtSelectedItems:dtSelectedItems" />
									</p:column>
								</p:dataTable>
							</h:form>
						</div>
					</div>

				</div>
			</div>

			<div id="divItensForm">
				<div class="p-col-12">
					<div class="card">
						<h5>#{holdMessageView.label('items')}</h5>
						<h:form id="formItems">
							<p:remoteCommand name="updateDtItems" action="#" process="@none"
								update="dtItems" />
							<p:dataTable
								value="#{budgetController.budgetEstimateDTO.estimatedItemValues}"
								var="product" editable="true" rowKey="#{product.commercialCode}"
								id="dtItems" reflow="true" size="small"
								styleClass="ui-datatable-sm"
								style="max-height:30vh; overflow-y: auto;">
								<!-- rows="5" paginator="true"
								paginatorAlwaysVisible="false"
								currentPageReportTemplate="{startRecord}-{endRecord} of {totalRecords} records"
								rowsPerPageTemplate="5,10,{ShowAll|'All'}"
								paginatorTemplate="bottom" -->
								<p:ajax event="rowEdit"
									listener="#{budgetController.reEditItemQuantity}"
									update="budgetEstimateForm" />
								<f:facet name="header">
									<p:button onclick="PF('searchProductDialog').show()"
										icon="pi pi-plus"
										styleClass="ui-button-raised ui-button-success p-mr-2" />

								</f:facet>

								<p:column
									headerText="#{holdMessageView.label('codigo_comercial')}">
									<h:outputText value="#{product.commercialCode}" />
								</p:column>
								<p:column headerText="#{holdMessageView.label('quantidade')}">
									<p:cellEditor>
										<f:facet name="output">
											<h:outputText value="#{product.quantity}" />
										</f:facet>
										<f:facet name="input">
											<p:inputText value="#{product.quantity}" style="width:100%"
												label="Name" />

										</f:facet>
									</p:cellEditor>
								</p:column>
								<p:column
									headerText="#{holdMessageView.label('preco_bruto_unitario')}">
									<h:outputText value="#{product.unitGrossValue}">
										<f:convertNumber currencySymbol="R$" type="currency"
											locale="pt_BR" />
									</h:outputText>
								</p:column>
								<p:column
									headerText="#{holdMessageView.label('preco_bruto_total')}">
									<h:outputText value="#{product.totalGrossValue}">
										<f:convertNumber currencySymbol="R$" type="currency"
											locale="pt_BR" />
									</h:outputText>
								</p:column>
								<p:column headerText="#{holdMessageView.label('un_st_valor')}">
									<h:outputText value="#{product.unitStValue}">
										<f:convertNumber currencySymbol="R$" type="currency"
											locale="pt_BR" />
									</h:outputText>
								</p:column>
								<p:column headerText="#{holdMessageView.label('valor_st')}">
									<h:outputText value="#{product.stValue}">
										<f:convertNumber currencySymbol="R$" type="currency"
											locale="pt_BR" />
									</h:outputText>
								</p:column>
								<p:column
									headerText="#{holdMessageView.label('preco_unitario')}">
									<h:outputText value="#{product.unitPrice}">
										<f:convertNumber currencySymbol="R$" type="currency"
											locale="pt_BR" />
									</h:outputText>
								</p:column>
								<p:column headerText="#{holdMessageView.label('total')}">
									<h:outputText value="#{product.totale}">
										<f:convertNumber currencySymbol="R$" type="currency"
											locale="pt_BR" />
									</h:outputText>
								</p:column>
								<p:column style="width:2rem">
									<p:rowEditor editTitle="Edit Row" cancelTitle="Cancel Edit"
										saveTitle="Save Row" />
								</p:column>
							</p:dataTable>


						</h:form>


					</div>
				</div>
			</div>
			<div class="p-col-12" id="estimatedTotals">
				<div class="card">
					<p:messages globalOnly="true" id="msgQuoteSuccess" />
					<h:form id="budgetEstimateForm">
						<div class="ui-fluid p-formgrid p-grid">
							<div class="p-field p-col-12 p-md-3">
								<p:outputLabel for="grossV"
									value="#{holdMessageView.label('valor_bruto')}" />
								<p:inputNumber id="grossV"
									value="#{budgetController.budgetEstimateDTO.grossValue}"
									symbol="R$ " symbolPosition="p" readonly="true"
									decimalSeparator="," thousandSeparator="." />
							</div>
							<div class="p-field p-col-12 p-md-3">
								<p:outputLabel for="stT"
									value="#{holdMessageView.label('valor_st')}" />
								<p:inputNumber id="stT"
									value="#{budgetController.budgetEstimateDTO.stTotal}"
									symbol="R$ " symbolPosition="p" readonly="true"
									decimalSeparator="," thousandSeparator="." />
							</div>
							<div class="p-field p-col-12 p-md-3">
								<p:outputLabel for="liquidV"
									value="#{holdMessageView.label('valor_liquido')}" />
								<p:inputNumber id="liquidV"
									value="#{budgetController.budgetEstimateDTO.liquidValue}"
									symbol="R$ " symbolPosition="p" readonly="true"
									decimalSeparator="," thousandSeparator="." />
							</div>


						</div>
					</h:form>
				</div>
			</div>


		</div>

		<p:dialog header="Download" widgetVar="downloadDialog" modal="true"
			responsive="true">
			<h:form>
				<div class="ui-fluid p-formgrid p-grid">
					<div class="p-field p-col-12 p-md-6">
						<p:outputLabel for="fileName"
							value="#{holdMessageView.label('nome_arquivo')}" />
						<p:inputText id="fileName"
							value="#{budgetController.downloadStreamsForm.name}" />
					</div>

					<div class="p-field p-col-12 p-md-6">
						<p:outputLabel for="fileType"
							value="#{holdMessageView.label('tipo')}" />
						<p:selectOneMenu id="fileType"
							value="#{budgetController.downloadStreamsForm.contentType}">
							<f:selectItem itemLabel="Select One" itemValue=""
								noSelectionOption="true" />
							<f:selectItem itemLabel="PDF" itemValue="pdf" />
						</p:selectOneMenu>
					</div>

					<div class="demo-container p-p-4">
						<p:commandButton icon="pi pi-download"
							action="#{budgetController.exportReport}" process="@form"
							ajax="false" />
					</div>
				</div>
			</h:form>
		</p:dialog>
		<p:dialog widgetVar="dlgSearchCustomer" modal="true"
			header="#{holdMessageView.label('busca_de_cliente')}"
			positionType="absolute" responsive="true">
			<p:tabView>
				<p:tab title="#{holdMessageView.label('palavra_chave')}">
					<h5>
						<h:outputText
							value="#{holdMessageView.label('busca_por_nome_cliente')}" />
					</h5>
					<h:form>

						<div class="p-formgroup-inline">
							<div class="p-field">
								<p:inputText type="text" placeholder="keyword"
									value="#{budgetController.nameCustomerToFind}" />
							</div>
							<p:commandButton value="#{holdMessageView.label('enviar')}"
								icon="pi pi-send"
								action="#{budgetController.findCustomerByName(0)}"
								onstart="PF('dlgSearchCustomer').hide();
								PF('globalLoadDlg').show()"
								oncomplete="PF('globalLoadDlg').hide();
								let customers = xhr.getResponseHeader('customers');
								if(customers > 1)
									PF('dlgSelectCustomer').show();
								"
								update="fomrSelectCustomer growl" />
						</div>
					</h:form>
				</p:tab>
				<p:tab
					title="#{holdMessageView.label('codigo')} / #{holdMessageView.label('store')}">
					<h:form>
						<div class="p-formgroup-inline">
							<div class="p-field ">
								<p:outputLabel value="#{holdMessageView.label('codigo')}"
									for="customerCode" />
								<p:inputText value="#{budgetController.searchCustomerDTO.code}"
									onkeypress="if(event.keyCode == 13){
										findCustomerByCodeAndStore()
									}"
									id="customerCode" maxlength="6" />
								<p:message for="@previous" />
							</div>
							<div class="p-field ">
								<p:outputLabel value="#{holdMessageView.label('store')}"
									for="customerStore" />
								<p:inputText value="#{budgetController.searchCustomerDTO.store}"
									onkeypress="if(event.keyCode == 13){
										
										findCustomerByCodeAndStore()
									}"
									id="customerStore" />
								<p:message for="@previous" />
							</div>
							<p:remoteCommand process="@form"
								update="@form growl :customerDTO"
								action="#{budgetController.findCustomerByCode}"
								name="findCustomerByCodeAndStore"
								id="findCustomerByCodeAndStore"
								onstart="PF('globalLoadDlg').show();"
								oncomplete="PF('globalLoadDlg').hide();PF('dlgSearchCustomer').hide()" />
						</div>
					</h:form>
				</p:tab>
			</p:tabView>
		</p:dialog>

		<p:dialog widgetVar="dlgSelectCustomer" modal="true" width="50%"
			responsive="true">
			<h:form id="fomrSelectCustomer">

				<p:dataTable var="customer"
					value="#{budgetController.lazyCustomers}" paginator="true" rows="5"
					size="small" selectionMode="single" id="dtSelectCustomers"
					rowStyleClass="#{customer.blocked eq 'Sim' ? 'cheap' : null}">
					<p:ajax event="rowSelect"
						oncomplete="
						if(xhr.getResponseHeader('customer-isBlocked') != 'true')
							PF('dlgSelectCustomer').hide();"
						update="growl :customerDTO"
						listener="#{budgetController.selectCustomer}" />
					<p:column headerText="#{holdMessageView.label('codigo')}">
						<h:outputText value="#{customer.code}" />
					</p:column>
					<p:column headerText="#{holdMessageView.label('nome')}">
						<h:outputText value="#{customer.name}" />
					</p:column>
					<p:column headerText="#{holdMessageView.label('nome_fantasia')}"
						responsivePriority="6">
						<h:outputText value="#{customer.fantasyName}" />
					</p:column>
					<p:column headerText="CGC">
						<h:outputText value="#{customer.cgc}" />
					</p:column>
					<p:column headerText="#{holdMessageView.label('endereco')}"
						responsivePriority="4">
						<h:outputText
							value="#{customer.address},#{customer.city}-#{customer.state}" />
					</p:column>
					<p:column headerText="#{holdMessageView.label('bloqueado')}">
						<h:outputText value="#{customer.blocked}" />
					</p:column>
				</p:dataTable>
				<p:blockUI block="dtSelectCustomers" trigger="dtSelectCustomers">
					<i class="pi pi-spin pi-spinner" style="font-size: 3rem"></i>
				</p:blockUI>
			</h:form>
		</p:dialog>


		<p:dialog widgetVar="searchProductDialog" modal="true"
			responsive="true">
			<p:tabView>
				<p:tab title="#{holdMessageView.label('palavra_chave')}">
					<h:form>
						<h5>
							<h:outputText
								value="#{holdMessageView.label('busca_produtos_chave_descricao')}" />
						</h5>
						<div class="p-formgroup-inline">
							<div class="p-field">
								<p:inputText type="text" placeholder="keyword"
									value="#{budgetController.searchProductForm.description}" />
							</div>
							<p:commandButton value="#{holdMessageView.label('enviar')}"
								icon="pi pi-send"
								action="#{budgetController.findProductByDescription(1)}"
								update="growl :formProdutos" process="@form"
								onstart="PF('globalLoadDlg').show();"
								oncomplete="onCompleteSearchProductByDescription(xhr)" />
						</div>
					</h:form>
				</p:tab>
				<p:tab title="#{holdMessageView.label('codigo_comercial')}">
					<h:form>
						<div class="p-formgroup-inline">
							<div class="p-field">
								<p:inputText type="text"
									placeholder="#{holdMessageView.label('codigo_comercial')}"
									value="#{budgetController.searchProductForm.code}" id="code">
									<f:validateLength minimum="1" />
								</p:inputText>
								<p:message for="code" />
							</div>
							<p:commandButton icon="pi pi-send" process="@form" update="growl"
								action="#{budgetController.findProductByCode}" ajax="true" />

						</div>


					</h:form>
				</p:tab>

			</p:tabView>

		</p:dialog>
		<p:dialog id="exceptionDialog"
			header="#{budgetController.headerExceptionDialog}"
			widgetVar="exceptionDialog" height="500px" modal="true">
          
            Raw Object: <h:outputText
				value="#{budgetController.processingEntity}" escape="false" />
			<br />

		</p:dialog>

		<p:dialog header="Loading" modal="true" closable="false"
			widgetVar="globalLoadDlg" responsive="true">
			<i class="pi pi-spin pi-spinner" style="font-size: 4rem"></i>
			<div>A long-running process has been detected. Please wait...</div>
		</p:dialog>
		<p:confirmPopup global="true">
			<p:commandButton value="#{holdMessageView.label('nao')}"
				type="button" styleClass="ui-confirm-popup-no ui-button-flat" />
			<p:commandButton value="#{holdMessageView.label('sim')}"
				type="button" styleClass="ui-confirm-popup-yes" />
		</p:confirmPopup>

		<style type="text/css">
.cheap {
	background-color: #ff9999 !important;
	background-image: none !important;
	color: #000000 !important;
}
</style>

		<script type="text/javascript">
			//<![CDATA[
			$("#error").hide();
			$("#tryAgain").hide();
			$("#divSearchProducts").hide();
			$("#ItemContainarLoader").hide();
			$("#loaderProducts").hide();
			$("#divMsgProducts").hide();
			$("#estimateContent").hide();
			$("#estimateLoad").hide();
			$("#selectProducts").hide();
			$("#btnPrintBudget").hide();
			
			var processFinished=false;
			
			function startDownloadStreams(){
				PF('globalLoadDlg').show();
			}
			function completeDownloadStreams(){
				console.log('complete!')
				PF('globalLoadDlg').hide();
			}
			function detectLongProcess(){
				processFinished=false;
				setTimeout( function() {
					if(processFinished==false){
					 	PF('globalLoadDlg').show();
					 let interval =	setInterval( function() {
							if(processFinished==true){
							 	PF('globalLoadDlg').hide();
								clearInterval(interval);
							}
							}, 1 );
					}
						
					}, 450 );
			}
			function concludeLongProcess(){
				processFinished=true;
			}
			
			function onCompletePageProducts(){
			 	processFinished=true;
				
			}
			function onCompleteEstimate(xhr){
				 PF('globalLoadDlg').hide()
				$("#divItensForm").show();
				$("#selectProducts").hide();
				$("#estimatedTotals").show();
				$("#toolsForBudget").show();
				updateDtItems();
			}
			
			function onStartSearchProducts(){
				PF('globalLoadDlg').show();
			}
	
			function editEstimate(){
			$("#estimateContent").hide();
			$("#budgetForm").show();
			}
			function onStartQuote(){
				PF('dlgSelectProducts').hide()
				$("#budgetForm").hide();
				$("#estimateLoad").show();
				
			}
			function onCompleteQuote(xhr){
				$("#estimateLoad").hide();
				if(getResponseHeader(xhr)){
					$("#estimateContent").show();
				}else{
					$("#budgetForm").show();
					PF('exceptionDialog').show()
				}
			}
			
			
			
			
			function showSearchProducts(){
				$("#divSearchProducts").show();
			}
			function initTablesCustomer() {
				$("#budgetForm").hide();
				$("#divLoadCustomers").show();
				let promise = rcCustomers();
				let reslPromCustomer = handleCustomerPromise(promise);
			
				const promises = [reslPromCustomer];
				Promise.all(promises).then((results) => {
						$("#budgetForm").show();
						$("#tryAgain").hide();
					
				}).catch(e=>{
					$("#tryAgain").show();
				})


			}
	
			function handleCustomerPromise(promise) {
				return new Promise((resolve, reject) => {
					promise.then(value => {
						customerOk = getResponseHeader(value.jqXHR);
						if (customerOk) {							
							resolve("customerOk")
							$("#divLoadCustomers").hide();													
						} else {							
							customerOk = false;
							reject("customerError")
							$("#spinnerCustomer").hide();
						}
						
					})
				})
			}
			
			function selectedCustomer() {
				setTimeout(function () {
					$("#formClientTb").hide();
					$("#divSelectedCustomer").show();

				}, 4)
			}
			function changeSelectedCustomer() {
				$("#formClientTb").show();
				$("#divSelectedCustomer").hide();

			}

			function onStartFindCustomer() {
				PF('searchCustomer').hide();
				$("#budgetForm").hide();
				$("#divLoadCustomers").show();
				$("#spinnerCustomer").show();

			}
			
			function onStartProcessInDtCustomer() {
				$("#budgetForm").hide();
				$("#divLoadCustomers").show();
				$("#spinnerCustomer").show();
			}

			function onCompleteProcessInDtCustomer(xhr) {
				$("#spinnerCustomer").hide();
				if(getResponseHeader(xhr)){
					$("#budgetForm").show();
					$("#divLoadCustomers").hide();
				}else{
					$("#budgetForm").hide();
				}
			}
			
			function onCompletePageCustomers(xhr){
				if(getResponseHeader(xhr)==false){
					$("#divLoadCustomers").show();	
					$("#spinnerCustomer").hide();
					$("#budgetForm").hide();
					$("#tryAgain").show();
					
				}
			}
			
			
			function onCompleteSearchProduct(){
				$("#ItemContainerContent").show();
				$("#ItemContainarLoader").hide();
			}
			function onCompleteSearchProductByDescription(xhr){
				PF('globalLoadDlg').hide();
				PF('searchProductDialog').hide();
				if(getResponseHeader(xhr)){			
					$("#selectProducts").show();
					$("#divItensForm").hide();
					$("#estimatedTotals").hide();
					updateDtProducts();
				}
			}
			function getResponseHeader(xhr) {
				return xhr.getResponseHeader("Backbone-Status") != "Error";
			}
			
			function hideBudgetFormAndShowError() {
				$("#error").show();
				$("#budgetForm").hide();

			}

			
			
		//	]]>
		</script>
	</ui:define>

</ui:composition>