<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:p="http://primefaces.org/ui"
	xmlns:composite="http://java.sun.com/jsf/composite"
	xmlns:jsf="http://xmlns.jcp.org/jsf">
<composite:interface>
	<composite:attribute name="customerCode" required="true"
		type="java.lang.String" />

	<composite:attribute name="customerStore" required="true"
		type="java.lang.String" />
	<composite:attribute name="observer" required="true"
		shortDescription="Observer to be notified by subejct ProductFileImportComponent"
		type="com.farawaybr.portal.jsf.controller.ProductFileImportComponentObserver" />

	<composite:attribute name="onConfirm"
		shortDescription="Javascript function to call when user confirm the import."
		type="java.lang.String" />

	<composite:attribute name="confirmImport"
		method-signature="void confirmImport(com.farawaybr.portal.dto.BatchProductSearchDataWrapper)" />
</composite:interface>
<composite:implementation>
	<div id="#{cc.clientId}">
		<p:dialog header="Upload box" widgetVar="dlgUploadBox"
			responsive="true" modal="true" blockScroll="true"
			onHide="resetSteps()">
			<div class="w-auto">
				<h:form>
					<div id="divUpload">
						<p:fileUpload mode="advanced" dragDropSupport="true"
							allowTypes="/(\.|\/)(xlsx)$/" cancelLabel="Cancelar"
							label="Escolher"
							listener="#{productFileImportComponentV2.handleFileUpload}"
							process="@this" invalidFileMessage="Arquivo inválido" auto="true"
							onstart="$('#readingData').show();"
							oncomplete="$('#divUpload').hide();$('#readingData').hide();$('#dataReady').show();" />

					</div>

					<div id="readingData" class="p-grid p-ai-center vertical-container"
						style="display: none">
						<div class="p-col">
							<i class="pi pi-spin pi-spinner" style="font-size: 2rem"></i>
						</div>
						<div class="p-col">
							<LABEL>Extraindo dados...</LABEL>
						</div>
					</div>

					<div id="dataReady" class="p-grid p-ai-center p-flex-column"
						style="display: none;">
						<div class="p-col">
							<i class="pi pi-check" style="font-size: 2.5rem"></i>
						</div>
						<div class="p-col">
							<p:commandButton value="Dados extraídos. Customizar"
								update="#{cc.clientId}:previewExcelData, #{cc.clientId}:divSelectColumns"
								onclick="PF('dlgCustomizeData').show();PF('dlgUploadBox').hide();" />
						</div>
					</div>
				</h:form>
			</div>
		</p:dialog>

		<p:dialog header="Customizar" widgetVar="dlgCustomizeData"
			responsive="true" modal="true" blockScroll="true"
			style="max-width:25vw" onHide="resetSteps()"
			onShow="editScrollBodyMaxHeight('cl-previewExcelData','30vh')">
			<div>
				<h:form prependId="false">
					<div class="p-grid p-flex-column">
						<div class="font-bold w-10 text-cyan-500 text-lg p-col">Selecione
							as colunas de código e quantidade</div>

						<div class="ui-fluid formgrid grid p-col"
							jsf:id="divSelectColumns">
							<div class="field col">
								<p:outputLabel for="@next" value="Código" />
								<p:selectOneMenu id="optionCode"
									value="#{productFileImportComponentV2.codeColumn}"
									required="true" requiredMessage="Selecione coluna código">
									<f:selectItems
										value="#{productFileImportComponentV2.avaliableColumns}"
										var="column" itemValue="#{column}"
										itemLabel="Coluna-#{column+1}" />

								</p:selectOneMenu>
							</div>
							<div class="field col">
								<p:outputLabel for="@next" value="Quantidade" />
								<p:selectOneMenu id="optionQuantity"
									value="#{productFileImportComponentV2.quantityColumn}"
									required="true" requiredMessage="Selecione coluna quantidade">
									<f:selectItems
										value="#{productFileImportComponentV2.avaliableColumns}"
										var="column" itemValue="#{column}"
										itemLabel="Coluna-#{column+1}" />
								</p:selectOneMenu>
							</div>

						</div>
					</div>
					<div style="max-height: 30vh">
						<p:dataTable id="previewExcelData"
							value="#{productFileImportComponentV2.excelpreviewData}"
							var="data" widgetVar="cl-previewExcelData" rows="20"
							scrollable="true">
							<p:headerRow field="cellOffset" expandable="true"
								expanded="false">
								<p:column colspan="1">
									<div class="p-d-inline-flex p-ai-center"
										style="vertical-align: middle">
										<h:outputText styleClass="p-ml-2"
											value="Coluna-#{data.cellOffset+1}" />
									</div>
								</p:column>
							</p:headerRow>

							<p:column>
								<h:outputText value="#{data.value}" />
							</p:column>
						</p:dataTable>
					</div>
				</h:form>
				<f:facet name="footer">
					<p:commandButton value="Ler" icon="pi pi-check"
						action="#{productFileImportComponentV2.read(cc.attrs.customerCode,cc.attrs.customerStore)}"
						process="@this,#{cc.clientId}:optionQuantity,#{cc.clientId}:optionCode"
						onstart="PF('fileLoading').show()"
						oncomplete="onReadComplete(xhr);PF('fileLoading').hide()" />
				</f:facet>
			</div>

		</p:dialog>

		<p:dialog header="Problemas detectados" modal="true"
			fitViewport="true" responsive="true" widgetVar="dlgMismatch"
			style="max-width: 30vw;" onHide="resetSteps()">
			<h:form prependId="false">
				<p:remoteCommand name="updateMismatchTable" process="@none"
					update="mismatchTable,resolvedMismatchColumnsMessage"
					oncomplete="editScrollBodyMaxHeight('cl-mismatch-table','30vh');" />

				<p class="line-height-3 w-10"
					jsf:id="resolvedMismatchColumnsMessage">
					<strong>#{productFileImportComponentV2.mismatch=="cellType"?"Incompatibilidades
						nas céluas." :productFileImportComponentV2.mismatch=="multiple" ?
						"Quantidades incorretas em relação ao multiplo.": "Produtos não
						encontrados."}</strong> #{
					productFileImportComponentV2.resolvedMismatchColumnsMessage}
				</p>
				<div id="mismatchs-type-divtable">

					<p:dataTable
						value="#{productFileImportComponentV2.productsWithProblems}"
						var="product" id="mismatchTable" rows="10"
						widgetVar="cl-mismatch-table" scrollable="true" editable="true"
						lazy="false">
						<p:ajax event="rowEdit"
							listener="#{productFileImportComponentV2.onRowEdit}"
							update="#{cc.clientId}:resolvedMismatchColumnsMessage"
							oncomplete="onRowEdit(xhr)" />
						<p:column headerText="Linha" field="excelRowIndex+1"
							rendered="#{productFileImportComponentV2.mismatch == 'cellType'}" />
						<p:column headerText="Produto">
							<p:cellEditor
								>
								<f:facet name="output">
									<h:outputText value="#{product.code.value}" />
								</f:facet>
								<f:facet name="input">
									<p:inputText id="codeInput" value="#{product.code.value}"
										style="width:100%" />
								</f:facet>
							</p:cellEditor>
						</p:column>
						<p:column headerText="Quantidade">
							<p:cellEditor
								>
								<f:facet name="output">
									<h:outputText value="#{product.quantityValue}" />
								</f:facet>
								<f:facet name="input">
									<p:inputText id="quantityInput"
										value="#{product.quantityValue}" style="width:100%" />
									<p:tooltip for="quantityInput" value="Digite -1 para remover"
										position="bottom" />
								</f:facet>
							</p:cellEditor>
						</p:column>
						<p:column headerText="Tipo atual"
							rendered="#{productFileImportComponentV2.mismatch == 'cellType'}">
							<h:outputText value="#{product.quantity.cellType}" />
						</p:column>
						<p:column headerText="Tipo esperado"
							rendered="#{productFileImportComponentV2.mismatch == 'cellType'}">
							<h:outputText
								value="#{cell.cellType=='STRING' ? 'NUMERIC':'NUMERIC'}" />
						</p:column>
						<p:column headerText="Múltiplo"
							rendered="#{productFileImportComponentV2.mismatch == 'multiple'}">
							<h:outputText value="#{product.correctMultiple}" />
						</p:column>
						<p:column style="width:6rem">
							<p:rowEditor editTitle="Edit Row" cancelTitle="Cancel Edit"
								saveTitle="Save Row" />
						</p:column>

					</p:dataTable>
				</div>
				<div id="resolved-types-mismatchs"
					class="p-grid p-ai-center p-flex-column" style="display: none;">
					<div
						class="p-col bg-cyan-500 text-white font-bold border-round m-2 flex align-items-center justify-content-center">
						<i class="pi pi-check" style="font-size: 2.5rem"></i>
					</div>
					<div class="p-col">
						<p:commandButton value="Próximo"
							action="#{productFileImportComponentV2.read(cc.attrs.customerCode,cc.attrs.customerStore)}"
							onclick="PF('fileLoading').show();" process="@this"
							oncomplete="PF('fileLoading').hide();onReadComplete(xhr);"
							icon="pi pi-arrow-right" iconPos="right" />
					</div>
				</div>
			</h:form>


		</p:dialog>
		<p:dialog header="Importação concluída" modal="true"
			widgetVar="importacaoConcluida" closable="false">
			<div class="p-grid p-ai-center p-flex-column">
				<div
					class="p-col bg-cyan-500 text-white font-bold border-round m-2 flex align-items-center justify-content-center">
					<i class="pi pi-check" style="font-size: 3.5rem"></i>
				</div>
				<div class="p-col">
					<p:commandButton value="Confirmar"
						action="#{productFileImportComponentV2.confirm(cc.attrs.observer)}"
						onclick="PF('fileLoading').show();" process="@this"
						oncomplete="PF('fileLoading').hide();PF('importacaoConcluida').hide()"
						icon="pi pi-check" />
				</div>
			</div>
		</p:dialog>
		<p:dialog header="Carregando..." modal="true" closable="false"
			widgetVar="fileLoading" responsive="true">
			<i class="pi pi-spin pi-spinner" style="font-size: 5rem"></i>
		</p:dialog>
	</div>


	<script>
		function onRowEdit(xhr) {
			let istypesOk = Boolean(xhr.getResponseHeader('typesok'));
			if (istypesOk) {
				resolvedMismatchsDialogLayout();

			}
		}

		function resetSteps() {
			defaultMismatchDialogLayout();
			defaultUploadBoxLayout();
		}
		function onReadComplete(xhr) {
			let isMismatch = Boolean(xhr.getResponseHeader('mismatch'));
			let productsFound = xhr.getResponseHeader('products-found');
			let onComplete = Boolean(xhr.getResponseHeader('onComplete'));
			console.log('isMismatch ' + isMismatch)
			if (isMismatch) {
				console.log('isMismatch')
				defaultMismatchDialogLayout();
				PF('dlgMismatch').show();
				PF('dlgCustomizeData').hide();
				updateMismatchTable();
				return;
			}
			if (productsFound == 'false') {
				console.log('products found')
				defaultMismatchDialogLayout();
				PF('dlgMismatch').show();
				PF('dlgCustomizeData').hide();
				updateMismatchTable();
				return;
			}
			if (onComplete) {
				console.log("oncomplete!")
				PF('dlgMismatch').hide();
				defaultMismatchDialogLayout();
				PF('importacaoConcluida').show();
				defaultUploadBoxLayout();
			}
		}

		function defaultUploadBoxLayout() {
			$('#divUpload').show();
			$('#readingData').hide();
			$('#dataReady').hide();
		}
		function defaultMismatchDialogLayout() {
			$('#resolved-types-mismatchs').hide();
			$('#mismatchs-type-divtable').show();
		}

		function resolvedMismatchsDialogLayout() {
			$('#resolved-types-mismatchs').show();
			$('#mismatchs-type-divtable').hide();
		}
	</script>
</composite:implementation>

</html>